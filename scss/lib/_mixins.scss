@mixin float($side: left)
{
	*display: inline;
	zoom: 1;
	float: unquote($side);
}

@mixin apply-side-rhythm-border($side, $width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	border-#{$side}:
	{
		style: $border-style;
		width: $width;
		color: $border-color;
	};
	@if $side == top
	{
		margin-top: $width * -1;
	}
	@if $side == left
	{
		margin-left: $width * -1;
	}
	@if $side == bottom
	{
		margin-top: $width * -1;
		position: relative;
		top: $width;
	}
	@if $side == right
	{
		margin-left: $width * -1;
		position: relative;
		left: $width;
	}
}
//
@mixin position($side, $lines: 1, $font-size: $base-font-size)
{
	$side: rhythm($lines, $font-size);
}
@mixin position-top($lines: 1, $font-size: $base-font-size)
{
	@include position(top, $lines: 1, $font-size: $base-font-size);
}
@mixin position-left($lines: 1, $font-size: $base-font-size)
{
	@include position(left, $lines: 1, $font-size: $base-font-size);
}
@mixin position-bottom($lines: 1, $font-size: $base-font-size)
{
	@include position(bottom, $lines: 1, $font-size: $base-font-size);
}
@mixin position-right($lines: 1, $font-size: $base-font-size)
{
	@include position(right, $lines: 1, $font-size: $base-font-size);
}
//
@mixin rhythm-borders    ($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	border:
	{
		style: $border-style;
		width: $width;
		color: $border-color;
	};
	position: relative;
	margin-top:  $width * -2;
	margin-left: $width * -2;
	top:  $width;
	left: $width;
}
//
@mixin trailing-border   ($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include apply-side-rhythm-border(bottom, $width, $border-style, $border-color);
}
@mixin leading-border    ($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include apply-side-rhythm-border(top,    $width, $border-style, $border-color);
}
//
@mixin horizontal-borders($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include leading-border(                  $width, $border-style, $border-color);
	@include trailing-border(                 $width, $border-style, $border-color);
	margin-top:  $width * -2;
}
@mixin   vertical-borders($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include apply-side-rhythm-border(  left, $width, $border-style, $border-color);
	@include apply-side-rhythm-border( right, $width, $border-style, $border-color);
	margin-left: $width * -2;
}
@mixin h-borders         ($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include horizontal-borders(              $width, $border-style, $border-color);
}
@mixin v-borders         ($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include   vertical-borders(              $width, $border-style, $border-color);
}
//
@mixin border            ($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include rhythm-borders(                  $width, $border-style, $border-color);
}
@mixin border-top 	     ($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include leading-border(                  $width, $border-style, $border-color);
}
@mixin border-bottom     ($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include trailing-border(                 $width, $border-style, $border-color);
}
@mixin border-left       ($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include apply-side-rhythm-border(  left, $width, $border-style, $border-color);
}
@mixin border-right      ($width: 1px, $border-style: $default-rhythm-border-style, $border-color: $default-rhythm-border-color)
{
	@include apply-side-rhythm-border( right, $width, $border-style, $border-color);
}
//
@mixin margin-top($lines: 1, $font-size: $base-font-size)
{
	@include       leader($lines, $font-size,  margin);
}
@mixin margin-bottom($lines: 1, $font-size: $base-font-size)
{
	@include      trailer($lines, $font-size,  margin);
}
@mixin  margin-left($lines: 1, $font-size: $base-font-size)
{
	margin-left:   rhythm($lines, $font-size);
}
@mixin margin-right($lines: 1, $font-size: $base-font-size)
{
	margin-right:  rhythm($lines, $font-size);
}
//
@mixin padding-top($lines: 1, $font-size: $base-font-size)
{
	@include        leader($lines, $font-size, padding);
}
@mixin padding-bottom($lines: 1, $font-size: $base-font-size)
{
	@include       trailer($lines, $font-size, padding);
}
@mixin  padding-left($lines: 1, $font-size: $base-font-size)
{
	padding-left:  rhythm($lines, $font-size);
}
@mixin padding-right($lines: 1, $font-size: $base-font-size)
{
	padding-right: rhythm($lines, $font-size);
}
//
@mixin     padding($lines: 1, $font-size: $base-font-size)
{
	@include       leader($lines, $font-size, padding);
	@include      trailer($lines, $font-size, padding);
	padding-left:  rhythm($lines, $font-size);
	padding-right: rhythm($lines, $font-size);
}
@mixin      margin($lines: 1, $font-size: $base-font-size)
{
	@include       leader($lines, $font-size,  margin);
	@include      trailer($lines, $font-size,  margin);
	margin-left:   rhythm($lines, $font-size);
	margin-right:  rhythm($lines, $font-size);
}
//
@mixin max-height($lines: 1, $font-size: $base-font-size)
{
	max-height: rhythm($lines, $font-size);
}
@mixin min-height($lines: 1, $font-size: $base-font-size)
{
	min-height: rhythm($lines, $font-size);
//	   *height: rhythm($lines, $font-size);
}
@mixin     height($lines: 1, $font-size: $base-font-size)
{
	    height: rhythm($lines, $font-size);
}
//
@mixin clearfix
{
	@include pie-clearfix;
}
.clearfix
{
	@include clearfix;
}
//
@mixin    top($lines: 1, $font-size: $base-font-size)
{
	   top: rhythm($lines, $font-size);
}
@mixin bottom($lines: 1, $font-size: $base-font-size)
{
	bottom: rhythm($lines, $font-size);
}
//
@mixin font-size($to-size, $lines: lines-for-font-size($to-size), $from-size: $base-font-size)
{
	@include adjust-font-size-to($to-size, $lines, $from-size);
}
@mixin bloc($to-size, $lines: lines-for-font-size($to-size), $from-size: $base-font-size)
{
	@include font-size($to-size, $lines, $from-size);
	@include margin-bottom($lines, $to-size);
}
//
@mixin show($type: block)
{
	display: $type;
}
@mixin hide
{
	display: none;
}

// cf.http://yaccessibilityblog.com/library/css-clip-hidden-content.html
@mixin mask()
{
	position: absolute;
	clip: rect(1px 1px 1px 1px); // IE6, IE7
	clip: rect(1px, 1px, 1px, 1px);
	padding:0;
	margin: 0;
	border:0;
	height: 1px;
	width: 1px;
	overflow: hidden;
}
@mixin unmask()
{
	position: relative;
	width:  auto;
	height: auto;
	clip: auto;
}
//
.hide-text,
.really-hide-text
{
	@include mask();
}
//
@mixin border-gutter($border-color: black, $border-width: 1px, $border-style: solid)
{
	padding-right: $blueprint-grid-margin / 2 - $border-width;
	 margin-right: $blueprint-grid-margin / 2;
	 border-right: #{$border-width} #{$border-style} #{$border-color};
}
@mixin border-column($border-color: black, $border-width: 1px, $border-style: solid)
{
	padding-right: ($blueprint-grid-width / 2) + ($blueprint-grid-margin / 2) + ($blueprint-grid-margin / 2 - $border-width);
	 margin-right: ($blueprint-grid-width / 2) + ($blueprint-grid-margin / 2) + ($blueprint-grid-margin / 2);
	 border-right: #{$border-width} #{$border-style} #{$border-color};
}
//
@mixin hr
{
	@include border-top(1px, solid, black);
	@include margin-bottom(1);
	
	hr
	{
		@include mask;
	}
}
.hr
{
	@include hr;
}
//
@mixin list
{
	margin:  0;
	padding: 0;
	list-style-type: none;
	@include clearfix;
	
	li,
	dt,
	dd
	{
		margin: 0;
		float: left;
	}
}
//
@mixin column-base($first: false)
{
	@include float-left;
	
	@if $first
	{
		margin-left: 0;
	}
	@else
	{
		margin-left: $blueprint-grid-margin;
	}
	* html & 
	{
		overflow-x: hidden;
	} 
}

.list
{
	@include list;
}

//
// Liens « block », qui englobent d'autres éléments de type block 
//
.block-link
{
	@include clearfix;
	display: block;
	text-decoration: none;
}

//
// Hover des liens de type « block » : on souligne l'élément .title qu'ils contiennent
//
.block-link-hover
{
	&:hover,
	&:active,
	&:focus
	{
		.title
		{
			text-decoration: underline
		}
	}
}

//
// Liens pas soulignés, qui deviennent soulignés au :hover
//
.unroll
{
	text-decoration: none;
	
	&:hover,
	&:active,
	&:focus
	{
		text-decoration: underline;
	}
}

//
// Liens pas soulignés, qui deviennent soulignés au :hover
//
.no-roll
{
	text-decoration: none;
	
	&:hover,
	&:active,
	&:focus
	{
		text-decoration: none;
	}
}

//
// Boutons réinitialisés
//
.reset-button
{
	border: 0;
	width: auto;
	padding: 0;
	display: block;
}

//
// Clearfix
//
.clear-fix
{
	@include clearfix;
}

//
// Pas de margin-bottom															
//
.no-bottom
{
	margin-bottom: 0;
}

//
// Pas de padding-top (titres)
//
.no-padding-top
{
	padding-top: 0;
}

//
// Majuscules																
//
.uppercase
{
	text-transform: uppercase;
	letter-spacing: 0.001em;
}